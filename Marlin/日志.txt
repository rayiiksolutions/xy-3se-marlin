
2020.12.18
解决断电续打,无法续打的BUG
原因:CardReader的workDir与root同为两个变量,开机时通过cdroot两者赋值相同,都指向root
但是,后面workDir被open后,root的值没有被更新,也就是workDir.isOpen()为真,但是,root.isOpen()就是假的
因此,在CardReader::openFileRead里面,当workDir再次通过divDir指向root时,原本workDir是open的,现在变成close了
以致于后面的file.open无法打开断电之前的保留的文件

2020.12.22

2020.12.23
1.断电续打采用中断模式,以减少响应时间
2.喉管风扇和主板冷却风扇不受急停控制

2020.12.29
1.解决某些机器断电续打可能会失败的情况,在断电时,先关闭耗电部件
2.解决断电续打后,在加热期间退出打印,会退出失效的异常,采用全局退出法globalStop解决
3.增加配置文件更新参数功能,与更新固件类似,采用放入文件夹+文件形式
4.增加恢复出厂设置功能

2020.12.31
1.新增STM32F446的board,以及相关env配置
2.F103移植到F446相关程序修改
3.bootloader相应修改

2021.01.19
版本:V1.9
1.更改打印工具界面的字体 OK
2.暂停后,靠边 OK
3.改变断料补料逻辑,断料跳到进料界面 OK
4.回0后,要解锁电机 OK

2021.01.20
1.断料后,时间超过后,不能手动加温 OK
2.验证:打印中,停止后,再继续打印 OK
4.断电续打:
	打印中 OK
	断料后 OK
	暂停时 OK

2021.01.22
1.出错恢复:
	打印中 OK
	断料后 OK
	暂停时 OK

2021.01.25
解决:
1.解决语言切重启 OK
2.自动调平增加保存过程 OK
3.温度监控修改 OK
4.cura切的gcode温度过低不报错 OK
5.停止打印后,要抬升一段距离 OK

2021.01.26
1.出错提示重启 OK
2.弹窗黑边 OK

2021.01.27
1.在线烧录不能一次性成功 OK
2.无传感器加热不弹窗 OK:kill在温度定时器中调用,无法使用planner.tick所致

2021.01.28
版本:V1.10
1.暂停后,停止打印 OK
2.停止打印后,不能删除断点文件 OK:my_print_status状态没有更新至PRINT_IDLE
3.暂停后,掉电高度不恢复 OK
4.Z offset偏高 OK
5.cura切的gcode在加热阶段退出不了,会卡 OK
6.调平后,太斜不能调平,增加失败提示 OK

2021.01.29
1.程序框架更新:
	协议层,驱动层,通用接口层归纳为公共不变部分
	芯片,主板归纳为硬件可变部分
	项目程序归纳为应用可变部分
	编写接口规范,以及测试例程
	将bootloader变成一个子项目
	增加芯片:STM32F446VET
2.屏幕按下的颜色算法更新
3.测试独立双头

2021.02.27
1.解决:当暂停超过温度时间后,按停止,再重新打印一份文件,温度会掉下去

2021.03.01
1.修正E轴脉冲量
2.解决sd卡中途拔出,修改文件后,再插入,文件不刷新

2021-03-10
1.STM32F4在bootloader的情况下,无法启动,找到原因是strtof一旦被发现使用,将无法启动,测试程序中也如此

2021-03-12
1.解决速度显示异常

2021-03-18
STM32F446:
1.解决多次触摸后,会卡死重启
2.解决显示花屏
3.修正系统显示ID和机器信息

2021-03-18
版本更至V1.13
1.解决在线打印G29死机问题

2021-03-22
1.解决STM32F446无法使用sprintf进行浮点数与字符串切换的问题
2.解决风扇控制异常,调试STM32F446单头至能空跑

2021-03-23
1.打印完成强制关闭冷却风扇
2.解决STM32F446无法检测断电续打问题
3.优化:调平和修改语言,zoffset后,保存指定位置数据,不保存整体

2021-03-24
1.解决STM32F446风扇数在2,3时,会启动不了

2021-03-26
版本更至V1.14
1.解决断电后短时间重开机会白屏(断续续打电容问题)

2021-03-27
1.解决STM32F4断电续打无法保存文件

2021-03-31
1.将STM32F446双头调至可空跑,理解撞头原因
2.解决字符显示花屏的BUG:因为向mLCD->RAM写入0xFFFF时,会造成错位,所以,将白色改成0xFFFE得以解决

2021-04-01
1.解决STM32F446打印时乱跑和重启
2.切换E后X运行不顺畅

2021-04-02
1.解决STM32F446断电无法续打问题

2021-04-05
1.精确的断电续打
2.暂停立即执行

2021-04-06
版本V1.15
1.更新风扇控制界面,打印工具界面,增加的打印模式界面,单头只弹出正常模式说明
2.手动调平时,有些机型喷嘴会被移到热床外面
3.暂停在极短时间响应
4.断电续打减少损失
5.断料/暂停加温阶段,可以关闭窗口
修复:
1.暂停后续打速度变慢
2.断电续打后,界面显示在非正在打印界面
3.断电续打有时候会失败,并且重启时间太长

2021-04-14
版本V1.16:
1.更新1.15遇到的各种异常
2.界面返回出错,增加操作防呆
3.双头断料检测,右头无用
4.断电续打第二个头运动异常

2021-04-15
版本V1.17:
更新断电续打方式,使断电续打更可靠
更新二进一断料检测E轴异常
更新自动调平显示异常

2021-04-16
版本V1.18:
更新T挤出机参数,使挤出量理论与实际相符
Z轴复位异常,断电不保存
手动进出料,温度判断异常

2021-04-17
版本V1.19:
解决SD卡显示异常,次级文件夹会卡死
更新X5SA双Z双限位+probe复位逻辑

2021-04-24
版本V1.20
1.独立双头喷头X位置校准
2.独立双头模式掉电可以记忆
3.解决独立双头暂停,断电续打,断料续打功能异常(双头机制不正常)
4.优化断电续打,位置恢复后,要下降到打印高度才抽回
5.优化断料,暂停,再断电续打的回抽/抽回机制,尽量使料不溢出
6.解决断料后,断电,再恢复打印,发现又断料的情况下,打印出现异常的BUG.

2021-06-08
1.解决大部分F446触摸屏花屏现象
2.连续打印会重启的BUG.
3.部分控件功能异常等BUG
4.增加X5SA-500机型
5.bootloader更新至1.61,优化更新软件的逻辑,解决一些不常见的异常

2021-06-12
1.当在打印过程中拔掉SD卡时,提示SD卡读取错误,并提示要求重新插卡,然后继续打印,之前的版本一旦拔卡会重启
2.断电续打会在开始时就将打印文件显示出来,之前版本只有在加温后正常打印才会显示文件名
3.解决一个一直以来都有的BUG:在加温阶段,点击暂停,再点停止打印,点击取消,会重启.
4.继续优化显示速度,使花屏现象更进一步减少

2021-06-21
固件版本更新至V2.01
1.全新的操作界面,全新的风格,显示速度大幅提升,客户可以选择预定义的主题(初步有三种预定义主题供选择)
2.支持多国语言(内部理论上支持所有国际语言,当前先开放4国语言<中日韩英>,进行测试). //NG
3.增加4.3寸SSD1963屏驱动及相应的触摸参数,这个屏除用在600上,其它机型都可以用
4.全新的界面自适应配置,考虑到以后可能会用到其它分辩率的屏,采用弹形适配算法,用在其它分辩率时,可以自动适配
5.增加X5SA-600机型的配置
6.增加zoffset baby-step功能,即在打印过程中可调Z的偏移
7.优化断料检测操作,在断料以后,增加放弃打印按钮,之前的是必须要续料才能返回,当前可以直接放弃打印
8.独立双头增加前后差补校准功能
9.在生产中未发现的隐蔽性BUG修复:在文件列表,如果按下一个文件,不抬手,滑到另一个文件上,发现之前按的文件显示不正常
10.在信息界面增加芯片类型显示
11.解决图形界面底层BUG:当弹窗与父窗口控件边界相靠时,弹窗关闭会卡死

2021-06-24
1.优化主题显示,解决某些控件不跟随主题更改.
2.解决4.3屏触摸不良的问题
3.调试X5SA-600及解决它在测试中出现的异常
4.开机3秒内(在LOG界面),连续点击屏幕任何一个地方3次以上,进入屏幕校准,按提示校准后,连续点击屏幕任何一个地方3次保存数据,点击其它则取消退出
5.解决断电续打弹窗异常
6.多国语言显示边界优化,各弹窗信息排查优化
7.打印调整界面ZOffset按钮加大,修改参数按钮触摸范围
8.根据机型确定界面按钮,独立双头有模式按,带探测器的有Z偏移按钮
9.USB驱动编写

理解:
1.归零后,以nozzle所在位置为原(X_MIN_POS,Y_MIN_POS)点
2.Z_SAFE_HOMING的位置,指的就是probe要移到nozzle相对原点的Z_SAFE_HOMING_POINT位置
有效性:
会计算原点-NOZZLE_TO_PROBE_OFFSET+Z_SAFE_HOMING_POINT,看看是否超界
以X为例:
当NOZZLE_TO_PROBE_OFFSET的x为-10,表示X方向上,probe在nozzle的负方向上10mm处
如果Z_SAFE_HOMING_X_POINT为10,此时要求probe移到nozzle原点向x正向10mm处
那么实际移动是:0(原点) - (-10)(NOZZLE_TO_PROBE_OFFSET) + 10(Z_SAFE_HOMING_X_POINT) = 20mm
当NOZZLE_TO_PROBE_OFFSET的x为20,表示X方向上,probe在nozzle的正方向上20mm处
如果Z_SAFE_HOMING_X_POINT也是10
那么实际移动是:0(原点) - 20(NOZZLE_TO_PROBE_OFFSET) + 10(Z_SAFE_HOMING_X_POINT) = -10mm
由于-10超界了,所以呢,它移最大的边界是0,即实际移动是0mm
3.PROBING_MARGIN它影响调平的范围,但是,也受NOZZLE_TO_PROBE_OFFSET影响
以X为例:
如果PROBING_MARGIN为10
当NOZZLE_TO_PROBE_OFFSET的x为-20,当x走到最大时,此时probe离边界实际上是20,因为nozzle已经到正最大值了
当NOZZLE_TO_PROBE_OFFSET的x为20时,当x走到最小时,此时probe离边界实际上是20,因为nozzle已经到负最大值了

库修改的地方:
1.system_stm32f44x.c中SystemInit函数结尾增加__enable_irq(),取消VECT_TAB_OFFSET的定义.
2.取消interrupt.cpp中EXTI1_IRQHandler的定义
